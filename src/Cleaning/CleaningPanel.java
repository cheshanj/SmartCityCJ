/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Cleaning;

import Common.AutoCompleteDocument;
import Common.DatePicker;
import Common.CompletionService;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;

/**
 *
 * @author HiM
 */
public class CleaningPanel extends javax.swing.JPanel {

    /**
     * Creates new form CleaningPanel
     */
    private Vector<Vector<String>> data;
    private Vector<Vector<String>> clientData;
    private Vector<String> header;
    private Vector<String> headerOfClient;

    NameService nameService = new NameService();
    
    public CleaningPanel() {
        initComponents();
        fillCatNames();
        //fillMachineID(cmb_machineType.getSelectedItem().toString());
        header = new Vector<String>();
        header.add("Machine ID");
        header.add("Machine Type");
        header.add("Condition");
        header.add("Location");
        header.add("Established Date");
        header.add("Repair ID");

        loadTable2();
        setHeadersforClientTable();
        
        Document autoCompleteDocument = new AutoCompleteDocument((CompletionService<?>) nameService,
                txt_search);
        
        txt_search.setDocument(autoCompleteDocument);
        
        btn_refresh.setVisible(false);
        btnReports.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_notes = new javax.swing.JTextArea();
        txt_location = new javax.swing.JTextField();
        cmb_cndtion = new javax.swing.JComboBox();
        lbl_status = new javax.swing.JLabel();
        lbl_unitPrce = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmb_machineType = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        cmb_mId = new javax.swing.JComboBox();
        btn_Demo = new javax.swing.JButton();
        txt_estbdate = new javax.swing.JTextField();
        txt_search = new javax.swing.JTextField();
        txt_repairs = new javax.swing.JTextField();
        btn_datePick = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        maintenanceTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_clientID = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        rb_allMachines = new javax.swing.JRadioButton();
        rb_enteredID = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();
        btnReports = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1020, 680));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Machine ID");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel2.setText("Machine Type");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel3.setText("Condition");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel4.setText("Status");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jLabel6.setText("Notes");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, 20));

        txt_notes.setColumns(20);
        txt_notes.setRows(5);
        jScrollPane1.setViewportView(txt_notes);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 310, 150));
        jPanel2.add(txt_location, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 220, -1));

        cmb_cndtion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select>", "Brand New", "Used", "Repaired", "Under Repair" }));
        jPanel2.add(cmb_cndtion, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 220, -1));
        jPanel2.add(lbl_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 130, 20));

        lbl_unitPrce.setText("500.00");
        jPanel2.add(lbl_unitPrce, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, -1, 20));

        jLabel12.setText("Unit Price");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel17.setText("Location");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel7.setText("Established Date");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        cmb_machineType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select>", " " }));
        cmb_machineType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_machineTypeActionPerformed(evt);
            }
        });
        jPanel2.add(cmb_machineType, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 220, -1));

        jLabel19.setText("Repairs ID");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        cmb_mId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select>", " " }));
        cmb_mId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmb_mIdMouseClicked(evt);
            }
        });
        cmb_mId.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cmb_mIdMouseMoved(evt);
            }
        });
        cmb_mId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_mIdActionPerformed(evt);
            }
        });
        jPanel2.add(cmb_mId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 220, -1));

        btn_Demo.setText("Demo");
        btn_Demo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DemoActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Demo, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, -1, -1));

        txt_estbdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_estbdateMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_estbdateMouseClicked(evt);
            }
        });
        txt_estbdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_estbdateActionPerformed(evt);
            }
        });
        jPanel2.add(txt_estbdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 190, -1));

        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        jPanel2.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 210, 260, -1));
        jPanel2.add(txt_repairs, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 210, -1));

        btn_datePick.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calendar [www.imagesplitter.net].png"))); // NOI18N
        btn_datePick.setToolTipText("Click to pick the date");
        btn_datePick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_datePickActionPerformed(evt);
            }
        });
        jPanel2.add(btn_datePick, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 29, 29));

        maintenanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(maintenanceTable);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 970, 230));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search [www.imagesplitter.net].png"))); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 210, -1, -1));

        jLabel10.setText("Client ID");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));
        jPanel2.add(txt_clientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 220, -1));

        jTabbedPane1.addTab("Machine", jPanel2);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(clientTable);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 940, 280));

        jLabel5.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        jLabel5.setText("Newly added clients");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, -1, -1));

        jTabbedPane1.addTab("Client", jPanel1);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        jLabel20.setText("Reports");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, -1, -1));

        rb_allMachines.setText("All Machines");
        rb_allMachines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_allMachinesActionPerformed(evt);
            }
        });
        jPanel4.add(rb_allMachines, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, -1, -1));

        rb_enteredID.setText("For Entered Machine ID");
        rb_enteredID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_enteredIDActionPerformed(evt);
            }
        });
        jPanel4.add(rb_enteredID, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, -1, -1));

        jTabbedPane1.addTab("Reports", jPanel4);

        add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 990, 580));

        jLabel13.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Maintenance Section");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        btnSave.setBackground(new java.awt.Color(0, 204, 51));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save.png"))); // NOI18N
        btnSave.setToolTipText("Save");
        btnSave.setPreferredSize(new java.awt.Dimension(100, 29));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 58, 62));

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Delete.png"))); // NOI18N
        btnDelete.setToolTipText("Will be deleted whole records belongs to the selected machine ID");
        btnDelete.setPreferredSize(new java.awt.Dimension(100, 29));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 58, 62));

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cancel.png"))); // NOI18N
        btnClear.setToolTipText("Cancel / Clear");
        btnClear.setPreferredSize(new java.awt.Dimension(100, 29));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 58, 62));

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search.png"))); // NOI18N
        btnSearch.setPreferredSize(new java.awt.Dimension(109, 23));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 58, 62));

        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        btn_refresh.setToolTipText("Refresh / Load new clients");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });
        add(btn_refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 58, 62));

        btnReports.setBackground(new java.awt.Color(255, 255, 51));
        btnReports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/File.png"))); // NOI18N
        btnReports.setPreferredSize(new java.awt.Dimension(109, 23));
        btnReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportsActionPerformed(evt);
            }
        });
        add(btnReports, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 58, 62));
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txt_notes.setText("");
        txt_location.setText("");
        cmb_cndtion.setSelectedIndex(0);
        cmb_mId.setSelectedIndex(0);
        cmb_machineType.setSelectedIndex(0);
        txt_estbdate.setText("");
        
        lbl_status.setText("");
        
        txt_repairs.setText("");
        lbl_unitPrce.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        GetSetForMaintenance mt = new GetSetForMaintenance();
        mt.setId(cmb_mId.getSelectedItem().toString());

        MaintenanceDAO mc = new MaintenanceDAO();
        mc.DeleteButton(mt);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cmb_machineTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_machineTypeActionPerformed

        String machineCat = cmb_machineType.getSelectedItem().toString();
//        fillMachineID(machineCat);
        //retId();

//        GetSetForMaintenance g = new GetSetForMaintenance();
//        g.setId(cmb_mId.getSelectedItem().toString());
//       
//        MaintenanceDAO m = new MaintenanceDAO();
//        m.getDetailsForID(g);
//        
//       lbl_crntloctn.setText(g.getLocation());
//        lbl_cndtn.setText(g.getCondition());
//        
//        System.out.println(g.getLocation());
//        System.out.println(g.getCondition());
        
//        String id = cmb_mId.getSelectedItem().toString();
        //getPrice(id);
        
//        loadSensorTable(id);
    }//GEN-LAST:event_cmb_machineTypeActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        
//        GetSetForMaintenance mt = new GetSetForMaintenance();
//        SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
//        String postedDate = sdf.format(new Date());
//        String estbDate = txt_estbdate.getText();
//        mt.setId(cmb_mId.getSelectedItem().toString());
//        mt.setType(cmb_machineType.getSelectedItem().toString());
//        mt.setCondition(cmb_cndtion.getSelectedItem().toString());
//        mt.setLocation(txt_location.getText());
//        mt.setDate(estbDate);
//        mt.setStatus(lbl_status.getText());
//        mt.setUnitPrice(lbl_unitPrce.getText());
//        mt.setNote(txt_notes.getText());
//        mt.setSalesID(txt_clientID.getText());
//        MaintenanceDAO mc = new MaintenanceDAO();
//        mc.SubmitButton(mt);
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cmb_mIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_mIdActionPerformed

//        String id = cmb_mId.getSelectedItem().toString();
//        getPrice(id);
//        
//        loadSensorTable(id);
    }//GEN-LAST:event_cmb_mIdActionPerformed

//    public String retId() {
//        return cmb_mId.getSelectedItem().toString();
//        //return cmb_mIdMouseClicked( cmb_mId.getSelectedItem().toString());
//    }
    private void btn_DemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DemoActionPerformed
//        try {
            
            cmb_machineType.setSelectedIndex(2);
            cmb_cndtion.setSelectedIndex(3);
            txt_location.setText("Panadura");
            txt_notes.setText("Successfully Established...!");
            txt_estbdate.setText("2013-08-21");

//            Connection c = Db.mycon();
//            Statement s = c.createStatement();
//            //s.executeUpdate("UPDATE ");
//            ResultSet rs = s.executeQuery("SELECT * FROM Purifying_Machine WHERE PurifierID ='" + cmb_mId.getSelectedItem().toString() + "'");
//            ResultSet rs1 = s.executeQuery("SELECT * FROM maint_Rec WHERE PurifierID ='" + cmb_mId.getSelectedItem().toString() + "'");
//            String s1 = null;
//            String s2 = null;
//
//            while (rs.next()) {
//                s1 = rs.getString("Price");
//                s2 = rs.getString("MachineCondition");
//            }
//
//            lbl_unitPrce.setText(s1);
//            
//
//        } catch (ClassNotFoundException | SQLException ex) {
//            
//        }
    }//GEN-LAST:event_btn_DemoActionPerformed

    private void txt_estbdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_estbdateMousePressed
        

    }//GEN-LAST:event_txt_estbdateMousePressed

    private void btn_datePickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_datePickActionPerformed
        DatePicker dp = new DatePicker(null);
        txt_estbdate.setText(dp.setPickedDate());

    }//GEN-LAST:event_btn_datePickActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        
        String rid = txt_repairs.getText();
        String md = txt_search.getText();
        if(rid.isEmpty() && !md.isEmpty()){
        GetSetForMaintenance g = new GetSetForMaintenance();
        g.setTxtSearch(txt_search.getText());
        MaintenanceDAO dao = new MaintenanceDAO();
        dao.SearchButton(g);

        //reset to default
        cmb_mId.setSelectedIndex(0);
        cmb_cndtion.setSelectedIndex(0);
        txt_location.setText("");
        lbl_unitPrce.setText("");
        
        header = new Vector<String>();
        header.add("Machine ID");
        header.add("Machine Type");
        header.add("Condition");
        header.add("Location");
        header.add("Established Date");
        header.add("Repair ID");
        
        //add searched values to the Jtable
        data = dao.fillDetails(g);
        maintenanceTable.setModel(new DefaultTableModel(data, header));
        jScrollPane3.setViewportView(maintenanceTable);
        }
       // String m = txt_search.getText();
        
        else if(md.isEmpty() && !rid.isEmpty()) { 
            GetSetForMaintenance g = new GetSetForMaintenance();
        g.setTxtSearch(txt_repairs.getText());
        
        MaintenanceDAO dao = new MaintenanceDAO();
        dao.SearchButtonFromRId(g);

        //reset to default
        cmb_mId.setSelectedIndex(0);
        cmb_cndtion.setSelectedIndex(0);
        txt_location.setText("");
        lbl_unitPrce.setText("");
        
        header = new Vector<String>();
        header.add("Machine ID");
        header.add("Machine Type");
        header.add("Condition");
        header.add("Location");
        header.add("Established Date");
        header.add("Repair ID");
        
        //add searched values to the Jtable
        data = dao.fillDetails(g);
        maintenanceTable.setModel(new DefaultTableModel(data, header));
        jScrollPane3.setViewportView(maintenanceTable);
        }
        
        
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void rb_allMachinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_allMachinesActionPerformed
        rb_enteredID.setSelected(false);
        rb_allMachines.setSelected(true);
    }//GEN-LAST:event_rb_allMachinesActionPerformed

    private void rb_enteredIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_enteredIDActionPerformed
        rb_allMachines.setSelected(false);
        rb_enteredID.setSelected(true);
    }//GEN-LAST:event_rb_enteredIDActionPerformed

    private void cmb_mIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_mIdMouseClicked
//        GetSetForMaintenance g = new GetSetForMaintenance();
//        g.setId(id);
        //loadTable1( id);
    }//GEN-LAST:event_cmb_mIdMouseClicked

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
    }//GEN-LAST:event_txt_searchActionPerformed

    private void cmb_mIdMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_mIdMouseMoved
        String id = cmb_mId.getSelectedItem().toString();
        
        loadSensorTable(id);
    }//GEN-LAST:event_cmb_mIdMouseMoved

    private void txt_estbdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_estbdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_estbdateActionPerformed

    private void txt_estbdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_estbdateMouseClicked
        txt_estbdate.setText("YYYY-MM-DD");
        DatePicker dp = new DatePicker(null);
        txt_estbdate.setText(dp.setPickedDate());
    }//GEN-LAST:event_txt_estbdateMouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        if(jTabbedPane1.getSelectedIndex()==1){
            btn_refresh.setVisible(true);
            btnReports.setVisible(false);
            
            btnSave.setEnabled(false);
            btnDelete.setEnabled(false);
            btnClear.setEnabled(false);
            btnSearch.setEnabled(false);
        }
        else if(jTabbedPane1.getSelectedIndex()==2){
            btnReports.setVisible(true);
            btn_refresh.setVisible(false);
            
            btnSave.setEnabled(false);
            btnDelete.setEnabled(false);
            btnClear.setEnabled(false);
            btnSearch.setEnabled(false);
        }
        else{
            btn_refresh.setVisible(false);
            btnReports.setVisible(false);
            
            btnSave.setEnabled(true);
            btnDelete.setEnabled(true);
            btnClear.setEnabled(true);
            btnSearch.setEnabled(true);
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        setHeadersforClientTable();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btnReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportsActionPerformed
        try {
            //HashMap param=new HashMap();
            // MyiReportViewer viewer=new MyiReportViewer("C:\\Users\\Ayesh\\Desktop\\Extra\\Net Beans Projects\\Payroll System\\Report\\paysheet.jasper\\");
                //viewer.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
    }//GEN-LAST:event_btnReportsActionPerformed

    private void loadSensorTable(String id) {

        MaintenanceDAO dao = new MaintenanceDAO();
        data = dao.getDetailsForID(id);

        header = new Vector<String>();
        header.add("Sensor ID");
        header.add("Location");
        header.add("Status");
        header.add("Price");
//        header.add("Established Date");
//        header.add("Repair ID");
        
        maintenanceTable.setModel(new DefaultTableModel(data, header));
        jScrollPane3.setViewportView(maintenanceTable);
    }
    
    
    private void loadTable2() {
        maintenanceTable.setModel(new javax.swing.table.DefaultTableModel(null, header));
    }

    public void setHeadersforClientTable(){
        
//        MaintenanceDAO dao = new MaintenanceDAO();
//        clientData = dao.loadNewClients();
//        headerOfClient = new Vector<String>();
//        headerOfClient.add("Sales ID");
//        headerOfClient.add("Client ID");
//        //headerOfClient.add("Name");
//        headerOfClient.add("First name");
//        headerOfClient.add("Middle name");
//        headerOfClient.add("Purifier Type");
//       // headerOfClient.add("Qty");
//        headerOfClient.add("Address");
//        
//        clientTable.setModel(new javax.swing.table.DefaultTableModel(clientData, headerOfClient));
    }
    
    private void fillCatNames() {
//        try {
//            MaintenanceDAO mdao = new MaintenanceDAO();
//            ArrayList machineCatList = mdao.getCategories();
//
//            String machineCat = cmb_machineType.getSelectedItem().toString();
//            ArrayList macID = mdao.getIDs(machineCat);
//
//            Iterator i = machineCatList.iterator();
//
//            while (i.hasNext()) {
//                cmb_machineType.addItem(i.next());
//                if (macID == null) {
//                    cmb_mId.removeAllItems();
//                }
//            }
//        } catch (Exception ex) {}
    }

    private void fillMachineID(String machineCat) {
//        try {
//            MaintenanceDAO mdao = new MaintenanceDAO();
//            ArrayList macID = mdao.getIDs(machineCat);
//
//            Iterator i = macID.iterator();
//
//            cmb_mId.removeAllItems();
//
//            while (i.hasNext()) {
//
//                cmb_mId.addItem(i.next());
//
//            }
//
//            cmb_mId.setSelectedIndex(0);
//            
//            String id = cmb_mId.getSelectedItem().toString();
//       } catch (Exception ex) {}
    }

    //Auto Completion method
    private static class NameService implements CompletionService<String> {

        private List<String> data1;
        
        String ss = null;
        ArrayList data2 = null;

        /**
         * Create a new
         * <code>NameService</code> and populate it.
         */
        public NameService() {

            

        }

        /**
         * {@inheritDoc}
         */
        public String autoComplete(String startsWith) {
            // Naive implementation, but good enough for the sample
            String hit = null;
//            
//            for (Iterator it = data2.iterator(); it.hasNext();) {
//                String o = null ;
//                
//                o= (String) it.next();
//                if (o.startsWith(startsWith)) {
//                    // CompletionService contract states that we only
//                    // should return completion for unique hits.
//                    if (hit == null) {
//                        hit = o;
//                    } else {
//                        hit = null;
//                        break;
//                    }
//                }
//                
//            }
//
            return  hit;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReports;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btn_Demo;
    private javax.swing.JButton btn_datePick;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JTable clientTable;
    private javax.swing.JComboBox cmb_cndtion;
    private javax.swing.JComboBox cmb_mId;
    private javax.swing.JComboBox cmb_machineType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_unitPrce;
    private javax.swing.JTable maintenanceTable;
    private javax.swing.JRadioButton rb_allMachines;
    private javax.swing.JRadioButton rb_enteredID;
    private javax.swing.JTextField txt_clientID;
    private javax.swing.JTextField txt_estbdate;
    private javax.swing.JTextField txt_location;
    private javax.swing.JTextArea txt_notes;
    private javax.swing.JTextField txt_repairs;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables
}
